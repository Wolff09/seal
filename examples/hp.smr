observer HazardPointer [negative] {

	variables:
		thread T;
		pointer P;	

	states:
		s1(HP_init)[initial];
		s2(HP1_invoked);
		s3(HP1_protected);
		s4(HP1_retired);
		s5(HP1_protected_HP2_invoked);
		s6(HP1_retired_HP2_invoked);
		s7(HP1_protected_HP2_protected);
		s8(HP1_retired_HP2_protected);

		s9(HP2_invoked);
		s10(HP2_protected);
		s11(HP2_retired);
		s12(HP2_protected_HP1_invoked);
		s13(HP2_retired_HP1_invoked);
		s15(HP2_retired_HP1_protected);

		sF(fail)[final];

		s16(HP1_interim);
		s17(HP2_interim);

	transitions:
		s1 -- enter protect1(T, P) >> s2;
		s2 -- exit protect1(T) >> s3;
		s3 -- enter protect2(T, P) >> s5;
		s4 -- enter protect2(T, P) >> s6;
		s5 -- exit protect2(T) >> s7;
		s6 -- exit protect2(T) >> s8;
		s3 -- enter retire(*, P) >> s4;
		s5 -- enter retire(*, P) >> s6;
		s7 -- enter retire(*, P) >> s8;
		
		s2 -- enter protect1(T, !P) >> s1;
		s3 -- enter protect1(T, !P) >> s1;
		s4 -- enter protect1(T, !P) >> s1;
		s5 -- enter protect1(T, !P) >> s1;
		s6 -- enter protect1(T, !P) >> s1;
		s7 -- enter protect1(T, !P) >> s10;
		s8 -- enter protect1(T, !P) >> s11;
		s5 -- enter protect2(T, !P) >> s3;
		s6 -- enter protect2(T, !P) >> s4;
		s7 -- enter protect2(T, !P) >> s3;
		s8 -- enter protect2(T, !P) >> s4;

		s1 -- enter protect2(T, P) >> s9;
		s9 -- exit protect2(T) >> s10;
		s10 -- enter protect1(T, P) >> s12;
		s11 -- enter protect1(T, P) >> s13;
		s12 -- exit protect1(T) >> s7;
		s13 -- exit protect1(T) >> s15;
		s10 -- enter retire(*, P) >> s11;
		s12 -- enter retire(*, P) >> s13;
		
		s9 -- enter protect2(T, !P) >> s1;
		s10 -- enter protect2(T, !P) >> s1;
		s11 -- enter protect2(T, !P) >> s1;
		s12 -- enter protect2(T, !P) >> s1;
		s13 -- enter protect2(T, !P) >> s1;
		s15 -- enter protect2(T, !P) >> s3;
		s12 -- enter protect1(T, !P) >> s10;
		s13 -- enter protect1(T, !P) >> s11;
		s15 -- enter protect1(T, !P) >> s11;

		s4 -- free(*, P) >> sF;
		s6 -- free(*, P) >> sF;
		s8 -- free(*, P) >> sF;
		s11 -- free(*, P) >> sF;
		s13 -- free(*, P) >> sF;
		s15 -- free(*, P) >> sF;

		s2 -- enter protect2(T, P) >> s16;
		s16 -- exit protect1(T) >> s5;
		s16 -- exit protect2(T) >> s12;
		s9 -- enter protect1(T, P) >> s17;
		s17 -- exit protect2(T) >> s12;
		s17 -- exit protect1(T) >> s5;
}